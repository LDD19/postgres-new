services:
  certbot-service:
    image: certbot-service
    build:
      context: .
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_ENDPOINT_URL_S3: ${AWS_ENDPOINT_URL_S3}
      AWS_REGION: ${AWS_REGION}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      BUCKET_NAME: ${BUCKET_NAME}
      CERTBOT_DOMAIN: ${CERTBOT_DOMAIN}
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
      CLOUDFLARE_API_TOKEN: ${CLOUDFLARE_API_TOKEN}
      S3FS_MOUNT: ${S3FS_MOUNT}
    ports:
      - 5432:5432
    devices:
      - /dev/fuse
    cap_add:
      - SYS_ADMIN
    depends_on:
      minio:
        condition: service_healthy
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - 9000:9000
    command: server /data
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 5s
      timeout: 5s
      retries: 1
  minio-init:
    image: minio/mc
    entrypoint: >
      /bin/sh -c "
        mc alias set local http://minio:9000 minioadmin minioadmin;
        (mc ls local/test || mc mb local/test);
      "
    depends_on:
      minio:
        condition: service_healthy
